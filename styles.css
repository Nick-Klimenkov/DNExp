@font-face {
    font-family: 'Inter';
    src: url("../fonts/Inter-Regular.woff2") format('woff2');
    font-weight: 300;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: 'Inter';
    src: url('../fonts/Inter-Italic.woff2') format('woff2');
    font-weight: 300;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: 'Inter';
    src: url("../fonts/InterTight-Regular.woff2") format('woff2');
    font-weight: 300;
    font-style: normal;
    font-display: swap;
}

/**
  Нормализация блочной модели
 */
*,
::before,
::after {
    box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
    padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
    margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(
  h3,
  h4,
  h5,
  h6,
  p,
  ul,
  ol,
  dl
):where([class]) {
    margin-block: 0;
}

:where(dd[class]) {
    margin-left: 0;
}

:where(fieldset[class]) {
    margin-left: 0;
    padding: 0;
    border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
    list-style: none;
}

:where(address[class]) {
    font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
    --paragraphMarginBottom: 24px;

    margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
    margin-bottom: var(--paragraphMarginBottom);
}




/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
    font: inherit;
}

html {
    /**
      Пригодится в большинстве ситуаций
      (когда, например, нужно будет "прижать" футер к низу сайта)
     */
    height: 100%;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
    scroll-behavior: smooth;
}

body {
    /**
      Пригодится в большинстве ситуаций
      (когда, например, нужно будет "прижать" футер к низу сайта)
     */
    min-height: 100%;
    /**
      Унифицированный интерлиньяж
     */
    line-height: 1.5;
}

/**
  Приводим к единому цвету svg-элементы
 */
svg *[fill] { fill: currentColor }
svg *[stroke] { stroke: currentColor }

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
    transition-property: fill, stroke;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
    *,
    ::before,
    ::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

:root {
    --color-dark: #000000;
    --color-white: #ffffff;
    --color-dark-gray: #444444;
    --color-light-gray: #F5F5F5;
    --color-pink:  #E2BCAF;

    --font-family-base: 'Inter-Regular', sans-serif;
    --font-family-accent: 'Inter-Italic', sans-serif;

    --container-width: 1500px;
    --container-padding-x: 15px;

    --transition-duration: 0.2s;
}

body {
    font-family: var(--font-family-base);
    font-weight: 600;
    font-size: 60px;
    line-height: 1.75;
    color: var(--color-light-gray);
    background-color: var(--color-white);
}


a,
button,
input,
textarea,
svg * {
    transiton-duration: var(--transition-duration);
}


a {
   color: var(--color-dark);
}

a:hover {
    color: var(--color-dark-gray);
}

.container {
    max-width: calc(var(--container-width) + var(--container-padding-x)*2);
    margin-inline: auto;
    padding-inline: var(--container-padding-x);
}




.collection {
    padding: 10px;
    text-align: center;
}

.product-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr); /* Create 3 columns */
    gap: 20px;
    margin-top: 5px;
}

.product-card {
    background-color: white;
    padding: 5px;
    border-radius: 2px;
}

.product-card img {
    max-width: 150px;
    border-radius: 2px;
}

.product-card h2 {
    font-size: 18px;
    margin: 2px 0;
}

.price {
    font-size: 16px;
    font-weight: bold;
    color: #333;
}









h1, h2 {
    font-family: var(--font-family-base);
    color: var(--color-dark);
    font-size: 32px;
    text-decoration: none;
    font-weight: 700;
}


.button {
    display: inline-flex;
    align-items: center;
    height: 38px;
    padding-inline: 10px;
    font-size: 14px;
    font-weight: 700;
    text-transform: uppercase;
    white-space: nowrap;
    background-color: var(--color-light-gray);
    border: none;
    border-radius: 10px;
}

.button:hover {
    background-color: var(--color-pink);
}



.header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    column-gap: 20px;
}

.header-menu-list {
    display: flex;
    column-gap: 50px;
}

.header-menu-link {
    display: inline-flex;
    align-items: center;
    height: 50px;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: 700;
    font-size: 16px;
}

.header-logo {
    flex-shrink: 0;
}

.header-actions {
    display: flex;
    column-gap: 20px;
}
